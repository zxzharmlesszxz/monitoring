body {
    color: #d7d7d7;
	background: #252525 url(../img/bg-cs.gif) 0px 0px;
	font-family: Arial, Helvetica, sans-serif;
	font-size:12px;
	padding:0;
	margin:0;
	top: 0;
	line-height:14px;
	}
html, body, div, h1, h2, h3, h4, h5, h6, ul, ol, dl, li, dt, dd, p, blockquote,   
pre, form, fieldset, table, th, td { margin: 0; padding: 0; } 
a img {border: none;}

a:link{color:#d7d7d7; text-decoration:none;}
a:active{color:#d7d7d7; text-decoration:none;}
a:visited{color:#d7d7d7; text-decoration:none;}
a:hover{color:#bbbbbb; text-decoration:none;}

.bb {
	position: relative;
	}

.wrapper {
	margin: 0 auto;
	width: 660px;
}

.back {
	width: 141px;
	height: 31px;
	background: url(/templates/img/back.gif) no-repeat;
	position: absolute;
	top: 0;
	padding: 6px 0 0 25px;
	margin-left:10px;
	z-index: 10;
	}

.bb .light {
	width: 882px;
	height: 460px;
	background: url(/templates/img/light.gif) no-repeat;
	position: absolute; 
	top: 0;
	left: 0;
	}

	
.title {
	width: 444px;
	height: 31px;
	background: url(/templates/img/title.png) no-repeat 0px 0px;
	}
	
* html img, .title{
	position: relative;
    behavior: expression((this.runtimeStyle.behavior="none")&&(this.pngSet?this.pngSet=true:(this.nodeName == "IMG" && this.src.toLowerCase().indexOf('.png')>-1?(this.runtimeStyle.backgroundImage = "none",
    this.runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + this.src + "', sizingMethod='image')",
    this.src = "img/transparent.gif"):(this.origBg = this.origBg? this.origBg :this.currentStyle.backgroundImage.toString().replace('url("','').replace('")',''),
    this.runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + this.origBg + "', sizingMethod='crop')",
    this.runtimeStyle.backgroundImage = "none")),this.pngSet=true));
}

	
#header {
	padding-top: 80px;
	background: #252525;
	z-index: 10;
	}

#header p {
	line-height: 24px;
	margin-top: 30px;
	}
	
#header ul {
	list-style: none;
	margin-top: 35px;
	}
	
li.m {
	background: url(/templates/img/li.gif) no-repeat 0px 4px;
	font-size: 18px;
	font-family: Georgia;
	line-height: 30px;
	font-weight: 200;
	padding: 0 0 0 35px;
	color: #ccc;
	}
	
* html li.m{
	background: url(/templates/img/li.gif) no-repeat 0px -40px;
	}
	
.dwn {margin-top: 45px;}

#csimage {
	background: url(/templates/img/cs16.png) no-repeat 0px 0px;
	height: 430px;
	}
	
* html img, #csimage{
	position: relative;
    behavior: expression((this.runtimeStyle.behavior="none")&&(this.pngSet?this.pngSet=true:(this.nodeName == "IMG" && this.src.toLowerCase().indexOf('.png')>-1?(this.runtimeStyle.backgroundImage = "none",
    this.runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + this.src + "', sizingMethod='image')",
    this.src = "img/transparent.gif"):(this.origBg = this.origBg? this.origBg :this.currentStyle.backgroundImage.toString().replace('url("','').replace('")',''),
    this.runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + this.origBg + "', sizingMethod='crop')",
    this.runtimeStyle.backgroundImage = "none")),this.pngSet=true));
}
	
#screenshot {
	float: right;
	margin: 50px 50px 0 0;
	background: url(/templates/img/screenshots.png) no-repeat 0px 0px;
	height: 182px;
	}
	
#screenshots-container {
	float:left;
	margin: 30px 0 0 50px;
	}
	
* html #screenshots-container{
	float:left;
	margin: 30px 0 0 25px;
	}
	
#screenshots {
	height: 120px;
	left: 50%;
	overflow: hidden;
	margin: 0 0 0 -275px;
	position: absolute;
	width: 550px;
	}
	
#frame-screenshots {
	height: 182px;
	}

.lightbox {
	margin-right: 50px;
	}
	
.jcarousel-skin-liftoff .jcarousel-direction-rtl
{
	direction: rtl;
}

.jcarousel-skin-liftoff .jcarousel-container-horizontal
{
	width: 550px;
}

.jcarousel-skin-liftoff .jcarousel-clip-horizontal
{
	height: 120px;
	margin: 0 0 0 -10px;
	width:  550px;
}

.previous-arrow
{
	background: url(/templates/img/arrows.png) no-repeat;
	cursor: pointer;
	height: 32px;
	left: 15px;
	position: absolute;
	top: 75px;
	width: 22px;
}

.previous-arrow:hover
{
	background-position: 0 -33px;
}

.next-arrow
{
	background: url(/templates/img/arrows.png) no-repeat -22px 0;
	cursor: pointer;
	height: 32px;
	position: absolute;
	right: 45px;
	top: 75px;
	width: 22px;
}

.next-arrow:hover
{
	background-position:-22px -33px; 	
}

#screenshot p {
	line-height: 24px;
	margin-top: 45px;
	width: 670px;
	}
	
.shade {
	background: url(/templates/img/shade.gif) no-repeat 0px -15px;
	width: 669px;
	height: 60px;
	}
	
.copy {
	padding: 10px 0 10px 0;
	text-align: center;
	color: #555555;
	width: 670px;
	height:40px;
	}
	

	
* html img, .man{
	position: relative;
    behavior: expression((this.runtimeStyle.behavior="none")&&(this.pngSet?this.pngSet=true:(this.nodeName == "IMG" && this.src.toLowerCase().indexOf('.png')>-1?(this.runtimeStyle.backgroundImage = "none",
    this.runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + this.src + "', sizingMethod='image')",
    this.src = "img/transparent.gif"):(this.origBg = this.origBg? this.origBg :this.currentStyle.backgroundImage.toString().replace('url("','').replace('")',''),
    this.runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + this.origBg + "', sizingMethod='crop')",
    this.runtimeStyle.backgroundImage = "none")),this.pngSet=true));
}